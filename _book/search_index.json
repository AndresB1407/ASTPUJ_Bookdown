[["index.html", "Análisis de Serie de Tiempo S&amp;P 500 1 Propuesta de estructura de datos a trabajar en el curso 1.1 Dataset: 1.2 Summary: 1.3 Scatter plott de la serie de tiempo: 1.4 Fuente:", " Análisis de Serie de Tiempo S&amp;P 500 Jesús Andrés Burbano Gómez 2024-10-21 1 Propuesta de estructura de datos a trabajar en el curso La estructura de información a trabajar en el curso será la serie de tiempo correspondiente al índice S&amp;P 500, el cual es un indicador ponderado del valor de capitalización de las 500 compañías más importantes de Estados Unidos. Calculado por la evaluadora de riesgo Standard &amp; Poors, este índice captura el 80% del comportamiento de la capitalización bursátil en el mercado americano. En tanto su estructura posee mayor diversidad en el tipo de compañías que lo componen, se tiene que el índice S&amp;P 500 es una buena medida para monitorear y predecir la actividad económica en los enclaves económicos de mayor importancia a nivel global. En general, la pertinencia del uso de este dataset radica en 3 razones principales: En principio, se trata de una estructura de información concisa, legítima en el marco de las actividades de sectores financieros globales, y sin problemas previos en cuanto a la limpieza de sus observaciones. Por lo que una rutina progresiva de análisis sobre esta base de datos se puede dar con mayor facilidad e interpretabilidad. El estudio del comportamiento de la capitalización bursátil a nivel global, contenido en el dataset escogido, implica una vista previa y una posible profundización del análisis financiero en el marco de las series de tiempo sobre el comportamiento de firmas, sectores y economías de alto impacto. De esta manera, la aplicación de la rutina de análisis del curso sobre este dataset puede decantar en un ejercicio robusto que puede extenderse más allá de los propósitos básicos de aprendizaje, y conformar una herramienta útil para las intenciones del autor. El estudio de la estructura y comportamiento de este dataset como serie de tiempo, inmerso en las dinámicas de intercambio de los mercados de activos financieros, puede representar una herramienta de profundización para la toma de decisiones en materia de optimización de portafolios, y, en general, en materia de comprensión e implementación práctica de instrumentos aplicados de análisis de procesos estocásticos y metodologías de pronósticos. 1.1 Dataset: # Load necessary libraries library(rvest) library(dplyr) # Load necessary libraries library(readr) # Import the downloaded CSV file (change the path accordingly) spx_data &lt;- read_csv(&quot;C:/Users/ASUS/OneDrive - PUJ Cali/Documentos/MAESTRÍA PUJ/analisis de series de tiempo/bookdown/ASTPUJ_Bookdown/HistoricalData_1728883475484.csv&quot;) # Display the first few rows of the dataset head(spx_data) ## # A tibble: 6 × 5 ## Date `Close/Last` Open High Low ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 10/11/2024 5815. 5775. 5822. 5775. ## 2 10/10/2024 5780. 5778. 5795. 5765. ## 3 10/09/2024 5792. 5752. 5797. 5745. ## 4 10/08/2024 5751. 5719. 5758. 5715. ## 5 10/07/2024 5696. 5738. 5739. 5687. ## 6 10/04/2024 5751. 5737. 5753. 5703. 1.2 Summary: summary(spx_data) ## Date Close/Last Open High Low ## Length:2527 Min. :1829 Min. : 0 Min. : 0 Min. : 0 ## Class :character 1st Qu.:2364 1st Qu.:2365 1st Qu.:2371 1st Qu.:2353 ## Mode :character Median :2938 Median :2933 Median :2947 Median :2919 ## Mean :3265 Mean :3256 Mean :3273 Mean :3237 ## 3rd Qu.:4147 3rd Qu.:4144 3rd Qu.:4169 3rd Qu.:4123 ## Max. :5815 Max. :5778 Max. :5822 Max. :5775 1.3 Scatter plott de la serie de tiempo: # Load necessary libraries library(ggplot2) library(dplyr) # Print the column names to check their exact names #print(colnames(spx_data)) # Convert the Date column to Date type spx_data &lt;- spx_data %&gt;% mutate(Date = as.Date(Date, format = &quot;%m/%d/%Y&quot;)) # Update the column name here after checking the output of print(colnames(spx_data)) spx_data &lt;- spx_data %&gt;% mutate(Close_price = as.numeric(gsub(&quot;[^0-9.]&quot;, &quot;&quot;, `Close/Last`))) # Update this line with the correct name # Remove rows with NA values in Date or Close_price spx_data &lt;- spx_data %&gt;% filter(!is.na(Date) &amp; !is.na(Close_price)) # Create the scatter plot ggplot(spx_data, aes(x = Date, y = Close_price)) + geom_point(color = &quot;blue&quot;, alpha = 0.6) + labs(title = &quot;S&amp;P 500 Close Prices Over Time&quot;, x = &quot;Date&quot;, y = &quot;Close Price&quot;) + theme_minimal() 1.4 Fuente: https://www.nasdaq.com/market-activity/index/spx/historical?page=1&amp;rows_per_page=10&amp;timeline=y10 ## # A tibble: 6 × 5 ## Date `Close/Last` Open High Low ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 10/11/2024 5815. 5775. 5822. 5775. ## 2 10/10/2024 5780. 5778. 5795. 5765. ## 3 10/09/2024 5792. 5752. 5797. 5745. ## 4 10/08/2024 5751. 5719. 5758. 5715. ## 5 10/07/2024 5696. 5738. 5739. 5687. ## 6 10/04/2024 5751. 5737. 5753. 5703. "],["análisis-gráfico-del-comportamiento-del-sp-500.html", " 2 Análisis gráfico del comportamiento del S&amp;P 500 2.1 Tratamiento previo del dataset 2.2 Serie de tiempo en bruto 2.3 Estacionalidad y tratamiento 2.4 Aproximación por MA 2.5 Aproximación por rezagos", " 2 Análisis gráfico del comportamiento del S&amp;P 500 2.1 Tratamiento previo del dataset Dada la base de datos escogida para las actividades del curso, se procede a realizar un análisis gráfico de los posibles patrones que pueda expresar esta serie de tiempo, particularmente, considerando los conceptos de aproximación a través de media móvil (MA), rezagos en la serie, y estacionalidad. Inicialmente, se procede con la consecusión del formato del dataset como serie de tiempo, empleando el paquete xts de R, el cual permite estructura el dataset en función de sus fechas, de tal forma que es posible tener en cuenta las brechas generadas por los fines de semana y holidays de esta serie de tiempo en días. #install.packages(&quot;xts&quot;) # Example if the Date is in &#39;MM/DD/YYYY&#39; format spx_data$Date &lt;- as.Date(spx_data$Date, format = &quot;%m/%d/%Y&quot;) library(xts) # Convert your data to an xts object # Assuming `spx_data` has a column &#39;Date&#39; in Date format and &#39;Close/Last&#39; for prices. spx_Close_ts &lt;- xts(spx_data$`Close/Last`, order.by = spx_data$Date) head(spx_Close_ts) ## [,1] ## 2014-10-14 1877.70 ## 2014-10-15 1862.49 ## 2014-10-16 1862.76 ## 2014-10-17 1886.76 ## 2014-10-20 1904.01 ## 2014-10-21 1941.28 2.2 Serie de tiempo en bruto Así, es posible extraer el gráfico preliminar del comportamiento de la serie de tiempo. Nótese que se consideran las fechas desde el 14 de octubre de 2014 hasta el 11 de octubre de 2024. plot(spx_Close_ts, main = &quot; &quot;, ylab=&quot;S&amp;P500 Index&quot;, col = &quot;deepskyblue&quot;, xlab= &quot;Date&quot;) title(main=&quot;S&amp;P500 Index (Starting at October 14th of 2014)&quot;) El gráfico permite denotar una tendencia bastante obvia en cuanto al contexto de la serie de tiempo, ésta es la variación en la actividad del índice en función de la pandemia de 2020, denotada por una fuerte caída del precio del índice alrededor del inicio de 2020. Así, el análisis previo a realizar en este documento considerará un segmento de la serie de tiempo comprendido desde el primero de enero de 2020. Además, el gráfico de rezagos presentada debajo permite observar el grado de correlación entre las obervaciones diarias y el número de rezagos a evaluar (hasta 30 rezagos), dada la estructura del mercado bursátil inmersa en el comportamiento diario, es de esperarse una alta correlación entre la serie y sus rezagos, de tal manera que una alta correlación positiva puede denotarse incluso hasta el límite del conjunto de gráficos construidos, pues la tendencia de correlación lineal entre las observaciones puede identificarse claramente en todas las instancias, incluso a pesar de que sobre los últimos números de rezagos la tendencia lineal parece englobarse, mostrando signos de grados de aleatoriedad, esto se tendrá en cuenta al graficar la aproximación por rezagos de la serie más adelante. # Subset data for the date range spx_segment &lt;- spx_Close_ts[&quot;2020-01-01/2024-10-11&quot;] lag.plot(spx_segment, lags = 30, do.lines = FALSE) 2.3 Estacionalidad y tratamiento Un análisis propicio de esta serie de tiempo también implica cónsiderar los posibles efectos estacionales que pueden subyacer en el comportamiento del índice. Así, se provee una aproximación desestacionalizada de la serie a través del método de diferenciación estacional. La aplicación de diferenciación estacional sustrae el valor del año anterior en la misma fecha para cada observación, de la siguiente manera: \\[ Y^* = Y_t - Y_u \\] Donde \\(Y^*\\) es la serie de tiempo diferenciada estacionalmente, \\(Y_t\\) es el valor del datapoint, y \\(Y_u\\) es el valor correspondiente a la misma fecha del datapoint en el año inmediatamente anterior. Esta es una técnica ideal para el tratamiento de efectos estacionales en series de tiempo diarias, pues permite aislar el comportamiento desestacionalizado del índice de manera simple y sin el requerimiento de una alta cantidad de observaciones que puedan denotar periodos estadísticamente significativos (como es requerido en el caso de ejercicios de desestacionalización de series anuales). A continuación, se presenta el gráfico de comparación entre la serie diferenciada estacionalmente (color azul) y el gráfico del tramo de la serie original en el mismo intervalo de tiempo (color negro), de tal forma que es posible notar la diferencia en sus patrones de crecimiento. Claramente, la serie sin desestacionalizar denota un patrón de crecimiento más estable, en contraposición a los altibajos que presenta la serie desestacionalizada, de tal forma que es posible atribuir este crecimiento sostenido a los efectos estacionales. # Seasonal differencing seasonal_diff &lt;- diff(spx_segment, lag = 365) # Check the result #plot(seasonal_diff, main = &quot;S&amp;P 500 - Seasonally Differenced Time Series&quot;) spx_segment2 &lt;- spx_Close_ts[&quot;2023-01-01/2024-10-11&quot;] #plot(spx_segment2, main = &quot; &quot;, ylab=&quot;S&amp;P500 Index since 2021-01-01&quot;, col = &quot;deepskyblue&quot;, xlab= &quot;Date&quot;) #title(main=&quot;S&amp;P500 Index (Starting at January First of 2021)&quot;) # Plot the original time series and the moving averages plot(spx_segment2, main = &quot;S&amp;P 500 Seasonally-Treated Series and Raw Series&quot;, col = &quot;black&quot;, lwd = 1, xlab = &quot;Date&quot;, ylab = &quot;Price&quot;) lines(seasonal_diff, col = &quot;blue&quot;, lwd = 2) # Adjust the legend position to &quot;topleft&quot; and include both MAs in the legend legend(&quot;topleft&quot;, legend = c(&quot;Original&quot;, &quot;Seasonal Diff&quot;), col = c(&quot;black&quot;, &quot;blue&quot;), lwd = 2, inset = 1, # Adjust inset if needed to bring the legend inside the plot area cex = 5) # Adjust `cex` to change the size of the legend text Ahora, teniendo en cuenta la serie desestacionalizada, es posible presentar sus aproximaciones por medio de media movil (MA) y rezagos. 2.4 Aproximación por MA Inicialmente, se presenta la sucesión de gráficos en los cuales se compara la evoluación de la serie desestacionalizada (en color negro) con sus aproximaciones por medio del cálculo de medias móviles a 10 días (color azul), y a 20 días (color rojo). Nótese cómo, a mayor cantidad de días considerados para la media móvil, se suaviza en mayor medida en comportamiento del índice. #install.packages(&quot;zoo&quot;) #install.packages(&quot;TTR&quot;) library(zoo) library(TTR) # Calculate a 10-day simple moving average spx_ma_10 &lt;- rollmean(seasonal_diff, k = 10, fill = NA) # Alternatively, using TTR for a 20-day moving average spx_ma_20 &lt;- SMA(seasonal_diff, n = 20) # Plot the original time series and the moving averages plot(seasonal_diff, main = &quot;S&amp;P 500 Close Prices with Moving Averages&quot;, col = &quot;black&quot;, lwd = 1, xlab = &quot;Date&quot;, ylab = &quot;Price&quot;) lines(spx_ma_10, col = &quot;blue&quot;, lwd = 2) lines(spx_ma_20, col = &quot;red&quot;, lwd = 2) # Adjust the legend position to &quot;topleft&quot; and include both MAs in the legend legend(&quot;topleft&quot;, legend = c(&quot;Original&quot;, &quot;10-day MA&quot;, &quot;20-day MA&quot;), col = c(&quot;black&quot;, &quot;blue&quot;, &quot;red&quot;), lwd = 2, inset = 1, # Adjust inset if needed to bring the legend inside the plot area cex = 5) # Adjust `cex` to change the size of the legend text 2.5 Aproximación por rezagos Finalmente, se presenta en el mismo gráfico la serie desestacionalizada (color negro), en conjunto con su aproximación en función de 10 rezagos. Esta cantidad de rezagos se escoge en función de la observación del lag plot, pues, desde la observación informal, puede notarse que es hasta el rezago 10 donde se puede apreciar una relación lineal y directamente proporcional con mayor pureza, cabe recalcar que este criterio de selección carece de una verificación estadística con rigor, la cual puede alcanzarse al aplicar un modelo autoregresivo sobre la serie de tiempo, sin embargo, este ejercicio limita su alcance a la observación de las tendencias preliminares de manera gráfica, sin profundizar en modelos de ajuste y predicción. # Create a 1-day lag for the subset spx_lag_1_segment &lt;- lag(seasonal_diff, n=10) # Plot the original segment and the lagged values plot(seasonal_diff, main = &quot;S&amp;P 500 Segment and 10-Day Lag&quot;, col = &quot;black&quot;, lwd = 1) lines(spx_lag_1_segment, col = &quot;blue&quot;, lwd = 2) legend(&quot;topright&quot;, legend = c(&quot;Original&quot;, &quot;7-day Lag&quot;), col = c(&quot;black&quot;, &quot;blue&quot;), lwd = 1) "]]
